[{"E:\\Projetos\\fobos_web\\src\\index.js":"1","E:\\Projetos\\fobos_web\\src\\App.js":"2","E:\\Projetos\\fobos_web\\src\\routes.js":"3","E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\index.js":"4","E:\\Projetos\\fobos_web\\src\\components\\Title\\index.js":"5","E:\\Projetos\\fobos_web\\src\\components\\Title\\styled.js":"6","E:\\Projetos\\fobos_web\\src\\styles\\global.js":"7","E:\\Projetos\\fobos_web\\src\\components\\Header\\index.js":"8","E:\\Projetos\\fobos_web\\src\\components\\Header\\styled.js":"9","E:\\Projetos\\fobos_web\\src\\components\\Logo\\index.js":"10","E:\\Projetos\\fobos_web\\src\\components\\Logo\\styled.js":"11","E:\\Projetos\\fobos_web\\src\\components\\VisualLine\\index.js":"12","E:\\Projetos\\fobos_web\\src\\components\\VisualLine\\styled.js":"13","E:\\Projetos\\fobos_web\\src\\components\\Layout\\index.js":"14","E:\\Projetos\\fobos_web\\src\\components\\Layout\\styled.js":"15","E:\\Projetos\\fobos_web\\src\\components\\ButtonForm\\index.js":"16","E:\\Projetos\\fobos_web\\src\\components\\ButtonForm\\styled.js":"17","E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\styled.js":"18","E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\MakeColumns.js":"19","E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\types.js":"20","E:\\Projetos\\fobos_web\\src\\components\\Menu\\index.js":"21","E:\\Projetos\\fobos_web\\src\\components\\Menu\\styled.js":"22","E:\\Projetos\\fobos_web\\src\\components\\Menu\\content.js":"23","E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\index.js":"24","E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\styled.js":"25","E:\\Projetos\\fobos_web\\src\\components\\Table\\index.js":"26","E:\\Projetos\\fobos_web\\src\\components\\Table\\styled.js":"27","E:\\Projetos\\fobos_web\\src\\components\\Table\\TableHeader\\index.js":"28","E:\\Projetos\\fobos_web\\src\\components\\Table\\TableBody\\index.js":"29","E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\header.js":"30","E:\\Projetos\\fobos_web\\src\\components\\Table\\TableBody\\row.js":"31","E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\index.js":"32","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\index.js":"33","E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\index.js":"34","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\index.js":"35","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\styled.js":"36","E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\styled.js":"37","E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\styled.js":"38","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\styled.js":"39","E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\index.js":"40","E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\styled.js":"41","E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\header.js":"42","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\header.js":"43","E:\\Projetos\\fobos_web\\src\\components\\Line\\index.js":"44","E:\\Projetos\\fobos_web\\src\\components\\Line\\styled.js":"45","E:\\Projetos\\fobos_web\\src\\services\\api.js":"46","E:\\Projetos\\fobos_web\\src\\services\\url.js":"47","E:\\Projetos\\fobos_web\\src\\components\\Feedback\\index.js":"48","E:\\Projetos\\fobos_web\\src\\components\\Feedback\\styled.js":"49","E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\header.js":"50","E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\header.js":"51","E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\header.js":"52","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\header.js":"53","E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\card.js":"54","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\index.js":"55","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\styled.js":"56","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\button.js":"57","E:\\Projetos\\fobos_web\\src\\pages\\Home\\index.js":"58","E:\\Projetos\\fobos_web\\src\\helper\\excelDateFormatter.js":"59","E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\statement.js":"60","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\index.js":"61","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\styled.js":"62","E:\\Projetos\\fobos_web\\src\\components\\Deadline\\index.js":"63","E:\\Projetos\\fobos_web\\src\\components\\Deadline\\styled.js":"64","E:\\Projetos\\fobos_web\\src\\components\\Deadline\\data.js":"65","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\FormCadastroMetas\\index.js":"66","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\FormCadastroMetas\\styled.js":"67","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\header.js":"68","E:\\Projetos\\fobos_web\\src\\components\\AlertData\\index.js":"69","E:\\Projetos\\fobos_web\\src\\components\\AlertData\\styled.js":"70","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\goal.js":"71","E:\\Projetos\\fobos_web\\src\\components\\Table\\Pagination\\index.js":"72","E:\\Projetos\\fobos_web\\src\\components\\Table\\Pagination\\styled.js":"73"},{"size":193,"mtime":1607286754323,"results":"74","hashOfConfig":"75"},{"size":351,"mtime":1620644321029,"results":"76","hashOfConfig":"75"},{"size":1530,"mtime":1635892990956,"results":"77","hashOfConfig":"75"},{"size":5773,"mtime":1613603482663,"results":"78","hashOfConfig":"75"},{"size":368,"mtime":1607301511454,"results":"79","hashOfConfig":"75"},{"size":815,"mtime":1612108632734,"results":"80","hashOfConfig":"75"},{"size":1345,"mtime":1635797985250,"results":"81","hashOfConfig":"75"},{"size":487,"mtime":1613450212869,"results":"82","hashOfConfig":"75"},{"size":606,"mtime":1613602332031,"results":"83","hashOfConfig":"75"},{"size":357,"mtime":1613440709298,"results":"84","hashOfConfig":"75"},{"size":1037,"mtime":1613602384249,"results":"85","hashOfConfig":"75"},{"size":284,"mtime":1613444664599,"results":"86","hashOfConfig":"75"},{"size":512,"mtime":1613444730284,"results":"87","hashOfConfig":"75"},{"size":848,"mtime":1635892951757,"results":"88","hashOfConfig":"75"},{"size":386,"mtime":1625270094920,"results":"89","hashOfConfig":"75"},{"size":602,"mtime":1608926178035,"results":"90","hashOfConfig":"75"},{"size":251,"mtime":1608925973405,"results":"91","hashOfConfig":"75"},{"size":278,"mtime":1607283822270,"results":"92","hashOfConfig":"75"},{"size":255,"mtime":1607288849949,"results":"93","hashOfConfig":"75"},{"size":226,"mtime":1607296890689,"results":"94","hashOfConfig":"75"},{"size":479,"mtime":1607302486916,"results":"95","hashOfConfig":"75"},{"size":436,"mtime":1625270264828,"results":"96","hashOfConfig":"75"},{"size":644,"mtime":1613436110724,"results":"97","hashOfConfig":"75"},{"size":2574,"mtime":1609894634111,"results":"98","hashOfConfig":"75"},{"size":276,"mtime":1607304276501,"results":"99","hashOfConfig":"75"},{"size":1841,"mtime":1635892857305,"results":"100","hashOfConfig":"75"},{"size":2136,"mtime":1635794266169,"results":"101","hashOfConfig":"75"},{"size":1209,"mtime":1635558436608,"results":"102","hashOfConfig":"75"},{"size":632,"mtime":1635892786102,"results":"103","hashOfConfig":"75"},{"size":371,"mtime":1609899488784,"results":"104","hashOfConfig":"75"},{"size":1368,"mtime":1635892746788,"results":"105","hashOfConfig":"75"},{"size":3673,"mtime":1635794589697,"results":"106","hashOfConfig":"75"},{"size":5278,"mtime":1635722076341,"results":"107","hashOfConfig":"75"},{"size":2522,"mtime":1609894901019,"results":"108","hashOfConfig":"75"},{"size":3945,"mtime":1635795792815,"results":"109","hashOfConfig":"75"},{"size":276,"mtime":1607556074310,"results":"110","hashOfConfig":"75"},{"size":284,"mtime":1608505064554,"results":"111","hashOfConfig":"75"},{"size":276,"mtime":1607556359356,"results":"112","hashOfConfig":"75"},{"size":276,"mtime":1607556219945,"results":"113","hashOfConfig":"75"},{"size":7306,"mtime":1613604179397,"results":"114","hashOfConfig":"75"},{"size":278,"mtime":1607644855729,"results":"115","hashOfConfig":"75"},{"size":554,"mtime":1613571613936,"results":"116","hashOfConfig":"75"},{"size":351,"mtime":1608943608409,"results":"117","hashOfConfig":"75"},{"size":153,"mtime":1607656251565,"results":"118","hashOfConfig":"75"},{"size":172,"mtime":1607656264077,"results":"119","hashOfConfig":"75"},{"size":141,"mtime":1621119176450,"results":"120","hashOfConfig":"75"},{"size":100,"mtime":1635556118785,"results":"121","hashOfConfig":"75"},{"size":731,"mtime":1608508008877,"results":"122","hashOfConfig":"75"},{"size":218,"mtime":1608468275382,"results":"123","hashOfConfig":"75"},{"size":90,"mtime":1608471489979,"results":"124","hashOfConfig":"75"},{"size":100,"mtime":1608490399103,"results":"125","hashOfConfig":"75"},{"size":184,"mtime":1613604589643,"results":"126","hashOfConfig":"75"},{"size":190,"mtime":1609022193448,"results":"127","hashOfConfig":"75"},{"size":166,"mtime":1608946988651,"results":"128","hashOfConfig":"75"},{"size":13681,"mtime":1621121295359,"results":"129","hashOfConfig":"75"},{"size":2042,"mtime":1612920992154,"results":"130","hashOfConfig":"75"},{"size":416,"mtime":1611533911980,"results":"131","hashOfConfig":"75"},{"size":1287,"mtime":1635617271299,"results":"132","hashOfConfig":"75"},{"size":515,"mtime":1613504960347,"results":"133","hashOfConfig":"75"},{"size":235,"mtime":1613603828854,"results":"134","hashOfConfig":"75"},{"size":4966,"mtime":1616456416835,"results":"135","hashOfConfig":"75"},{"size":276,"mtime":1613611530610,"results":"136","hashOfConfig":"75"},{"size":2535,"mtime":1616364435883,"results":"137","hashOfConfig":"75"},{"size":2185,"mtime":1616364684944,"results":"138","hashOfConfig":"75"},{"size":1780,"mtime":1613850841483,"results":"139","hashOfConfig":"75"},{"size":4384,"mtime":1616453745606,"results":"140","hashOfConfig":"75"},{"size":1097,"mtime":1614551885978,"results":"141","hashOfConfig":"75"},{"size":554,"mtime":1614530419228,"results":"142","hashOfConfig":"75"},{"size":1355,"mtime":1615337770895,"results":"143","hashOfConfig":"75"},{"size":746,"mtime":1615416519918,"results":"144","hashOfConfig":"75"},{"size":133,"mtime":1616454230998,"results":"145","hashOfConfig":"75"},{"size":568,"mtime":1625271837380,"results":"146","hashOfConfig":"75"},{"size":388,"mtime":1625272020283,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ogceai",{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"157"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"157"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"157"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"157"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"157"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"157"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"157"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"157"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"157"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"157"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"157"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"E:\\Projetos\\fobos_web\\src\\index.js",[],"E:\\Projetos\\fobos_web\\src\\App.js",[],"E:\\Projetos\\fobos_web\\src\\routes.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\index.js",["307","308","309","310","311","312","313","314"],"import React,  { useState, useEffect } from 'react'\r\nimport Title from \"../../components/Title\"\r\nimport Table from \"../../components/Table\"\r\nimport ButtonForm from \"../../components/ButtonForm\"\r\nimport Feedback from \"../../components/Feedback\"\r\nimport { Form, Col, Row } from 'react-bootstrap';\r\nimport * as S from \"./styled\"\r\nimport api from \"../../services/api\"\r\n\r\nimport moment from 'moment';\r\nimport XLSX from 'xlsx';\r\nimport { make_cols } from './MakeColumns';\r\nimport  {SheetJSFT}  from './types';\r\nimport ExcelDateFormatter from \"../../helper/excelDateFormatter.js\";\r\n\r\nimport {header} from './header'\r\n\r\nconst ImportarExtratoPage = () => {\r\n\r\n  const [file, setFile] = useState({});\r\n  const [data, setData] = useState({rows: [], cols: []});\r\n\r\n  const [card, setCard] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [Statements, setStatements] = useState([]);\r\n  const [cardSelected, setCardSelected] = useState({value: '', idCard: ''});\r\n    \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [resposta, setResposta] = useState({\r\n    show: false,\r\n    feedback: '',\r\n    text: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    indexCard();\r\n    indexStatement();\r\n }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(Statements);\r\n }, [Statements]);\r\n\r\n const indexStatement = async () => {\r\n  const response = await api.get(\"/api/Statement/Statements\");\r\n  setStatements(response.data);\r\n}\r\n\r\nconst indexCard = async () => {\r\n  const response = await api.get(\"/api/card/cards\");\r\n  setCards(response.data);\r\n}\r\n\r\nconst deleteValues = async (id) => {\r\n  const response = await api.put(\"/api/Statement/delete/\" + id);\r\n  setResposta(response.data);\r\n  indexStatement();\r\n}\r\n\r\nconst loadCard = async (id) => {\r\n  const response = await api.get(\"/api/card/show/\" + id);\r\n  setCardSelected(response.data.bank.name + ' - ' + card.name + card.agency + \" - \" + card.account);\r\n  //setCardSelected(response.data);\r\n  //{card.bank.name + \" - \" + card.name + \" - \" + card.agency + \" - \" + card.account}\r\n}\r\n\r\n  const handleImport = async () => {\r\n    const response = await api.post(\"/api/Statement/Bulk\", Statements );\r\n    setResposta(response.data);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files[0]) setFile(files[0]);\r\n  }\r\n \r\n  const handleLoad = () => {\r\n    /* Boilerplate to set up FileReader */\r\n    \r\n    const reader = new FileReader();\r\n    const excelFormatter = new ExcelDateFormatter();\r\n    const rABS = !!reader.readAsBinaryString;\r\n \r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const dataFile = XLSX.utils.sheet_to_json(ws, {defval:\"\"});\r\n      /* Update state */\r\n      let StatementsArray = [];\r\n      dataFile.map(data => {\r\n        let newDate = excelFormatter.excelDateToDate(data.date);\r\n        console.log(\"moment(data.date ,'DD/MM/YYYY')\");\r\n        console.log(newDate);\r\n        StatementsArray.push({\r\n          name: data.name,\r\n          description: data.description,\r\n          date: moment(newDate ,'YYYY-MM-DD'),\r\n          value: parseFloat((data.value).toString().replace(',','.')).toFixed(2),\r\n          fkCard: parseInt(cardSelected.idCard)\r\n        })\r\n      })\r\n      setStatements(StatementsArray);\r\n      setResposta({\r\n        show: true,\r\n        feedback: 'success',\r\n        text: 'Leitura do arquivo realizado com sucesso!',\r\n      });\r\n    }\r\n\r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    };\r\n  }\r\n \r\n  return(\r\n    <S.ImportarExtratoWrapper>\r\n      <Title title={\"Importar Extrato\"} size={42}/>\r\n      <Feedback resposta={resposta} setResposta={setResposta}/>\r\n      <S.FormDiv>\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"5\" controlId=\"importar_arquivo\">\r\n              <Form.Label>Importar Arquivo</Form.Label>\r\n              <Form.Control type=\"file\" accept={SheetJSFT} onChange={handleChange}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} md=\"6\" controlId=\"card\">\r\n              <Form.Label>Cartão Crédito / Débito </Form.Label>\r\n              <Form.Control type=\"text\" as=\"select\"\r\n                value={cardSelected.value}\r\n                onChange={event => {\r\n                  setCardSelected({value: event.target.value, idCard: parseInt(event.target.options[event.target.options.selectedIndex].getAttribute('data-key'))});\r\n                }}>\r\n                <option>{\"Preenche uma opção\"}</option>\r\n                {cards.map(card => {\r\n                  return (\r\n                    <option key={card.id} data-key={card.id}>\r\n                      {card.bank.name + \" - \" + card.name + \" - \" + card.agency + \" - \" + card.account}\r\n                    </option>\r\n                  );\r\n                })\r\n                }\r\n              </Form.Control> \r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Row>\r\n            <Form.Row as={Col} md=\"2\">\r\n              <ButtonForm\r\n                loading={loading}\r\n                title={\"Ler arquivo\"}\r\n                onClick={handleLoad}/>\r\n            </Form.Row>\r\n            <Form.Row as={Col} md=\"2\">\r\n              <ButtonForm\r\n                loading={loading}\r\n                title={\"Importar\"}\r\n                onClick={handleImport}/>\r\n            </Form.Row>\r\n          </Row>\r\n        </Form>\r\n\r\n        <Table header={header} datas={Statements}/>\r\n      </S.FormDiv>\r\n    </S.ImportarExtratoWrapper>\r\n  );\r\n}\r\n\r\nexport default ImportarExtratoPage;",["315","316"],"E:\\Projetos\\fobos_web\\src\\components\\Title\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Title\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\styles\\global.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Header\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Header\\styled.js",["317","318"],"E:\\Projetos\\fobos_web\\src\\components\\Logo\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Logo\\styled.js",["319","320","321","322","323"],"E:\\Projetos\\fobos_web\\src\\components\\VisualLine\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\VisualLine\\styled.js",["324"],"E:\\Projetos\\fobos_web\\src\\components\\Layout\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Layout\\styled.js",["325"],"E:\\Projetos\\fobos_web\\src\\components\\ButtonForm\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\ButtonForm\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\MakeColumns.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\types.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Menu\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Menu\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Menu\\content.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\index.js",["326"],"import React, { useState, useEffect } from 'react'\r\nimport Title from \"../../components/Title\"\r\nimport ButtonForm from \"../../components/ButtonForm\"\r\nimport Feedback from \"../../components/Feedback\"\r\nimport Table from \"../../components/Table\"\r\nimport { Form, Col, Spinner } from 'react-bootstrap';\r\nimport * as S from \"./styled\"\r\n\r\nimport api from \"../../services/api\"\r\nimport {header} from './header'\r\n\r\nconst CadastroBancoPage = () => {\r\n\r\n  const [bank, setBank] = useState({\r\n    name: ''\r\n  });\r\n\r\n  const [banks, setBanks] = useState([]);\r\n\r\n  const [resposta, setResposta] = useState({\r\n    show: false,\r\n    feedback: '',\r\n    text: '',\r\n  })\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect (() => {\r\n    indexBank();\r\n  }, [bank])\r\n\r\n  const saveBank = async () => {\r\n    setLoading(true);\r\n    const response = await api.post(\"/api/bank/save\",  bank );\r\n    setResposta(response.data);\r\n    indexBank();\r\n    setLoading(false);\r\n    emptyAfterSave();\r\n  }\r\n\r\n  const indexBank = async () => {\r\n    const response = await api.get(\"/api/bank/banks\");\r\n    setBanks(response.data);\r\n  }\r\n\r\n  const emptyAfterSave = async () => {\r\n    setBank({name: ''});\r\n  }\r\n\r\n  const editValues = async (id) => {\r\n    const response = await api.get(\"/api/bank/show/\" + id);\r\n    setBank(response.data);\r\n    indexBank();\r\n  }\r\n\r\n  const deleteValues = async (id) => {\r\n    const response = await api.put(\"/api/bank/delete/\" + id);\r\n    setBank(response.data);\r\n    setResposta(response.data);\r\n    indexBank();\r\n  }\r\n\r\n  return(\r\n    <S.CadastroBancoWrapper>\r\n      <Title title={\"Cadastro de Banco\"} size={42}/>\r\n      <Feedback resposta={resposta} setResposta={setResposta}/>\r\n      <S.FormDiv>\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"bank_name\">\r\n              <Form.Label>Nome do banco</Form.Label>\r\n              <Form.Control type=\"text\" \r\n                value={bank.name}\r\n                onChange={event => {\r\n                  setBank({...bank, name: event.target.value})\r\n                }}\r\n                />\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Form.Row as={Col} md=\"3\">\r\n            <ButtonForm onClick={saveBank}\r\n              loading={loading}\r\n              title={\"Salvar Banco\"}>\r\n                </ButtonForm>\r\n          </Form.Row>\r\n        </Form>\r\n      </S.FormDiv>\r\n\r\n      <Table header={header} datas={banks} action={true} editValues={editValues} deleteValues={deleteValues}/>\r\n\r\n    </S.CadastroBancoWrapper>\r\n  );\r\n}\r\n\r\nexport default CadastroBancoPage;","E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\index.js",["327","328","329","330","331"],"E:\\Projetos\\fobos_web\\src\\components\\Table\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\TableHeader\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\TableBody\\index.js",["332"],"E:\\Projetos\\fobos_web\\src\\pages\\ImportarExtrato\\header.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\TableBody\\row.js",["333","334","335"],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\index.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\index.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\index.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\index.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\index.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\header.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\header.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Line\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Line\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\services\\api.js",[],"E:\\Projetos\\fobos_web\\src\\services\\url.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Feedback\\index.js",["336","337","338"],"import React, { useEffect } from \"react\";\r\n\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Feedback = (props) => {\r\n  \r\n  useEffect(() => {\r\n    if(props.resposta.show == true){\r\n      console.log(\"2\");\r\n\r\n      const timer = setTimeout(() => props.setResposta({...props.resposta, show: false}), 5000);\r\n      return () => { // Return callback to run on unmount.\r\n          window.clearInterval(timer);\r\n        console.log(\"3\");\r\n\r\n        };\r\n      }\r\n  }, [props.resposta.show]);\r\n\r\n\r\n  return (\r\n    <S.AlertStyled \r\n      show={(props.resposta.show) ? true : false}\r\n      variant={props.resposta.feedback == \"success\" ? \"success\" : \"danger\"}>\r\n      {props.resposta.text}\r\n    </S.AlertStyled>\r\n  );\r\n}\r\n\r\nexport default Feedback;","E:\\Projetos\\fobos_web\\src\\components\\Feedback\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroUsuario\\header.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroBanco\\header.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroTipoCategoria\\header.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCategoria\\header.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroCartao\\card.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\index.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Title from \"../../components/Title\"\r\nimport ButtonForm from \"../../components/ButtonForm\"\r\nimport Feedback from \"../../components/Feedback\"\r\nimport Line from \"../../components/Line\";\r\nimport Table from \"../../components/Table\";\r\nimport { Form, Col, Spinner } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport * as S from \"./styled\"\r\nimport {header} from './header'\r\n\r\nimport api from \"../../services/api\"\r\n\r\nimport ShowcaseButton from './button';\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalBarSeries,\r\n  LineMarkSeries,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  Hint\r\n} from 'react-vis';\r\n\r\n\r\n\r\nconst GraficosPage = () => {\r\n\r\n  const [resposta, setResposta] = useState({\r\n    show: false,\r\n    feedback: '',\r\n    text: '',\r\n  });\r\n\r\n  const [params, setParams] = useState({\r\n    start: '',\r\n    end: '',\r\n    categories: [],\r\n    categoria: '',\r\n  })\r\n\r\n  const [categoriesSelected, setCategoriesSelected ] = useState([]); \r\n  const [categorySelected, setCategorySelected ] = useState(); \r\n  const [categories, setCategories ] = useState([]); \r\n  const [months, setMonths ] = useState([]); \r\n  const [IGC, setIGC ] = useState([]); \r\n  const [IGCmonthly, setIGCmonthly ] = useState([]); \r\n  const [plotIGC, setPlotIGC ] = useState([]); \r\n  const [plotLineIGC, setPlotLineIGC ] = useState([]); \r\n  const [categoriesLowerExpenses, setCategoriesLowerExpenses ] = useState([]); \r\n  const [categoriesHigherExpenses, setCategoriesHigherExpenses ] = useState([]); \r\n  const [hoveredNode, setHoveredNode] = useState([]);\r\n  const [clickedNode, setClickedNode] = useState({event: [], typeGraphic: '', categoryName: ''});\r\n  const [data, setData] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    indexCategory();  \r\n    calcLastThreeMonths();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    transformDataIGC();\r\n  }, [IGC])\r\n\r\n  useEffect(() => {\r\n    if(clickedNode.event != null){\r\n      loadStatements();\r\n    }\r\n  }, [clickedNode])\r\n\r\n  const calcLastThreeMonths = async () => {\r\n    const response = await api.get(\"/api/Statement/CalcLastThreeMonthValues\");\r\n    console.log(response);\r\n    let higherExpenses = [];\r\n    let lowerExpenses = [];\r\n    let auxLowerExpenses = 0;\r\n    let auxHightExpenses = 0;\r\n\r\n    response.data.map((value, i) => {\r\n        if(value.sumAllValues < 0 && auxLowerExpenses < 3){\r\n          console.log('auxLowerExpenses');\r\n          console.log(auxLowerExpenses);\r\n          lowerExpenses.push(value);\r\n          auxLowerExpenses += 1;\r\n        }\r\n        console.log('auxLowerExpenses');\r\n        console.log(auxLowerExpenses);\r\n    })\r\n    \r\n    response.data.slice(0).reverse().map((value, i) => {\r\n        if(value.sumAllValues < 0 && auxHightExpenses < 3){\r\n          higherExpenses.push(value);\r\n          auxHightExpenses += 1;\r\n        }\r\n    })\r\n    setCategoriesLowerExpenses(lowerExpenses);\r\n    setCategoriesHigherExpenses(higherExpenses);\r\n  }\r\n\r\n  const indexCategory = async () => {\r\n    const response = await api.get(\"/api/Category/Categories\");\r\n    setCategories(response.data);\r\n  }\r\n\r\n  const loadIGC = async () => {\r\n    const response = await api.get(\"/api/Statement/CalcStatementsCategories/\"+ params.start + \"&\" + params.end);\r\n    setIGC(response.data);\r\n    loadMonthlyIGC();\r\n    loadMonths();\r\n  }\r\n\r\n  const loadMonthlyIGC = async () => {\r\n    const response = await api.get(\"/api/Statement/CalcMonthlyStatementsCategories/\"+ params.start + \"&\" + params.end);\r\n    setIGCmonthly(response.data);\r\n  }\r\n\r\n  const loadMonths = async () => {\r\n    let months = [];\r\n    let start = getAbsoluteMonths(moment(params.start));\r\n    let end = getAbsoluteMonths(moment(params.end));\r\n\r\n    let qtdMonths = end - start;\r\n\r\n    for(var i = 0; i <= qtdMonths; i++){\r\n      console.log(i);\r\n      months.push(moment(params.start).add((i), 'months').format('M/YYYY'));\r\n    }\r\n\r\n    console.log(\"months\");\r\n    console.log(months);\r\n    setMonths(months);\r\n  }\r\n\r\n  const loadStatements = async () => {\r\n    if(clickedNode.typeGraphic == \"IGC\"){\r\n      const response = await api.get(\"/api/Statement/Show/Graphic/IGC/StatementByCategory/\"+ clickedNode.event.x + \"&\" + params.start + \"&\" + params.end);\r\n      setData(response.data);\r\n    } if(clickedNode.typeGraphic == \"IGC_Monthly\"){\r\n      let formatterCaracter = clickedNode.event.x.split('/');\r\n      const response = await api.get(\"/api/Statement/Show/Graphic/IGC/MonthlyStatementByCategory/\"+ clickedNode.categoryName + \"&\" + formatterCaracter[0] + '-' + formatterCaracter[1]);\r\n      setData(response.data);\r\n    }\r\n  }\r\n\r\n  function getAbsoluteMonths(momentDate) {\r\n    var months = Number(momentDate.format(\"MM\"));\r\n    var years = Number(momentDate.format(\"YYYY\"));\r\n    return months + (years * 12);\r\n  }\r\n\r\n  const transformDataIGC = async () => {\r\n    let dataFormatted = [];\r\n    categories.map(category => {\r\n      let flag = 0;\r\n      for (const value of IGC){\r\n        if(category.name == value.categoryName && value.sumAllValues < 0){\r\n          flag = 1;\r\n          dataFormatted.push({x: value.categoryName, y: (value.sumAllValues < 0 ? value.sumAllValues * -1 : value.sumAllValues)});\r\n        }\r\n      }\r\n      if(flag == 0 && category.sumAllValues <= 0){\r\n        dataFormatted.push({x: category.name, y: 0});\r\n      }\r\n    });\r\n    setPlotIGC(dataFormatted);\r\n  }\r\n\r\n    const transformDataMonthlyIGC = async (categories) => {\r\n      let dataFormatted = [];\r\n      categories.map(category => {\r\n        let linePlot = [];\r\n        for (const value of IGCmonthly){\r\n          if(category == value.categoryName){\r\n            console.log('value.StatementMonth');\r\n            console.log(value.statementMonth);\r\n            console.log('value');\r\n            console.log(value);\r\n            linePlot.push({x: value.statementMonth, y: (value.sumAllValues < 0 ? value.sumAllValues * -1 : value.sumAllValues), categoryName: value.categoryName});\r\n          }\r\n        }\r\n        dataFormatted.push(linePlot);\r\n      });\r\n      \r\n    console.log(\"linePlot\");\r\n    console.log(dataFormatted);\r\n    setPlotLineIGC(dataFormatted);\r\n  }\r\n\r\n  const  addCategorieInLinePlotIGC = async (category) => {\r\n    if(category){\r\n      let categories = categoriesSelected;\r\n      categories.push(category);\r\n      console.log(categories);\r\n      transformDataMonthlyIGC(categories);\r\n    }\r\n  }\r\n\r\n  const removeCategorieInLinePlotIGC = async (index) => {\r\n    if(index >= 0){\r\n      console.log(index);\r\n      categoriesSelected.splice(index, 1);\r\n      transformDataMonthlyIGC(categoriesSelected);\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      <S.IGPWrapper>\r\n      <Title title={\"IGC - Índice de Gastos por Categorias\"} size={42}/>\r\n      <Feedback resposta={resposta} setResposta={setResposta}/>\r\n      <S.FormDiv >\r\n        <Form className=\"mb-2\">\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"inicio\">\r\n                <Form.Label>Início</Form.Label>\r\n                <Form.Control type=\"date\"  \r\n                value={params.start}\r\n                onChange={event => {\r\n                  setParams({...params, start: event.target.value})\r\n                }}/>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"termino\">\r\n                <Form.Label>Término</Form.Label>\r\n                <Form.Control type=\"date\"  \r\n                value={params.end}\r\n                onChange={event => {\r\n                  setParams({...params, end: event.target.value})\r\n                }}/>\r\n              </Form.Group>\r\n          </Form.Row>\r\n         \r\n          <Form.Row as={Col} md=\"2\">\r\n            <ButtonForm onClick={loadIGC} title={\"Pesquisar\"}></ButtonForm>\r\n          </Form.Row>\r\n\r\n          </Form>\r\n        </S.FormDiv>\r\n\r\n        <Title title={\"Gastos por Categorias\"} size={20}/>\r\n      \r\n     <XYPlot style={{width: \"100%\"}} margin={{bottom: 100}} xType=\"ordinal\" width={1000} height={400}>\r\n      <VerticalGridLines />\r\n      <HorizontalGridLines />\r\n      <XAxis tickLabelAngle={-45} />\r\n      <YAxis />\r\n      <VerticalBarSeries\r\n        data={plotIGC}\r\n        onValueClick={e => setClickedNode({event: e, typeGraphic: 'IGC'})}\r\n        onValueMouseOver={e => setHoveredNode(e)}\r\n        onValueMouseOut={(e) => setHoveredNode(null)}\r\n      />\r\n        {hoveredNode && (\r\n            <Hint\r\n              getX={d => d.Categoria}\r\n              getY={d => d.Valores}\r\n              value={{\r\n                Categoria: hoveredNode.x,\r\n                Valores: hoveredNode.y,\r\n              }}\r\n            />\r\n          )}\r\n    </XYPlot>\r\n    <Line />\r\n\r\n    <Title title={\"Projeção de Categorias\"} size={20}/>\r\n    <S.FormDiv >\r\n        <Form className=\"mb-2\">\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"categoria\">\r\n                <Form.Label>Categoria</Form.Label>\r\n                <Form.Control as=\"select\"  value={categorySelected}\r\n                  onChange={event => {\r\n                    setCategorySelected(event.target.value)\r\n                  }}>\r\n                  <>\r\n                    <option></option>\r\n                    {categories.map((category) => (\r\n                      <option>{category.name}</option>\r\n                      ))\r\n                    }\r\n                  </>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group style={{paddingTop: \"24px\"}} as={Col} md=\"3\" controlId=\"button_adicionar_categoria\">\r\n                <ButtonForm  onClick={() => addCategorieInLinePlotIGC(categorySelected)} title={\"Adicionar Categoria\"}></ButtonForm>\r\n              </Form.Group>\r\n          </Form.Row>\r\n         \r\n          </Form>\r\n        </S.FormDiv>\r\n    <S.IGPWrapper>\r\n    <XYPlot style={{width: \"100%\"}} margin={{bottom: 50}} \r\n      xType=\"ordinal\" width={1000} height={400}\r\n      xDomain={months}>\r\n      <VerticalGridLines />\r\n      <HorizontalGridLines />\r\n      <XAxis tickLabelAngle={-45} title=\"Mês/Ano\"/>\r\n      <YAxis title=\"Gastos em R$\"/>\r\n      {plotLineIGC.map((line, index) => (\r\n        <LineMarkSeries\r\n          className=\"first-series\"\r\n          data={line}\r\n          style={{\r\n            strokeLinejoin: 'round',\r\n            strokeWidth: 4,\r\n            color: \r\n              ( index == 0 ? \"#10B2AE\" : \r\n                index == 1 ? \"#9E0616\" : \r\n                             \"#120A8F\"\r\n              )\r\n          }}\r\n          onValueClick={e => setClickedNode({event: e, typeGraphic: 'IGC_Monthly', categoryName: line[0].categoryName})}\r\n          onValueMouseOver={(e) => setHoveredNode(e)}\r\n          onValueMouseOut={(e) => setHoveredNode(null)}\r\n        />\r\n        ))}\r\n\r\n      {hoveredNode && (\r\n        <Hint\r\n          getX={d => d.Categoria}\r\n          getY={d => d.Valores}\r\n          value={{\r\n            Categoria: hoveredNode.x,\r\n            Valores: hoveredNode.y,\r\n          }}\r\n        />\r\n      )}\r\n\r\n    </XYPlot>\r\n    <S.WrapperLegend>\r\n      <S.LegendText>Legenda</S.LegendText>\r\n      <S.LegendWrapper>\r\n        {categoriesSelected.map((category, index) => {\r\n          return (\r\n            <S.LegendItemGroup>\r\n              <S.LegendCategory>{category}</S.LegendCategory>\r\n              <S.LegendColor colorIndex={index}/>\r\n              <S.LegendRemoveCategory onClick={() => removeCategorieInLinePlotIGC(index)}>Remover</S.LegendRemoveCategory>\r\n            </S.LegendItemGroup>\r\n          );\r\n          })\r\n        }\r\n      </S.LegendWrapper>\r\n    </S.WrapperLegend>\r\n\r\n    </S.IGPWrapper>\r\n\r\n    <Line />\r\n\r\n    <Title title={\"Resumo IGP\"} size={20}/>\r\n    <S.IGPWrapper>\r\n      <S.ResumoWrapper>\r\n        <S.ResumoWrapperGroup>\r\n          <S.ResumoGroup>\r\n            <S.ResumoTitle>Maiores gastos dos últimos 3 meses</S.ResumoTitle>\r\n            <S.ResumeWrapperCategory>\r\n              {categoriesLowerExpenses.map(category => {\r\n                    return (\r\n                      <S.GroupResumeCategory>\r\n                        <S.ResumeCategory>{category.categoryName}</S.ResumeCategory>\r\n                        <S.ResumeValue>{category.sumAllValues.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</S.ResumeValue>\r\n                      </S.GroupResumeCategory>\r\n                    )\r\n                  })\r\n                }\r\n            </S.ResumeWrapperCategory>\r\n          </S.ResumoGroup>\r\n\r\n          <S.ResumoGroup>\r\n            <S.ResumoTitle>Categorias com tendência de aumento de gasto</S.ResumoTitle>\r\n\r\n          </S.ResumoGroup>\r\n\r\n        </S.ResumoWrapperGroup>\r\n        <S.ResumoWrapperGroup>\r\n          <S.ResumoGroup>\r\n            <S.ResumoTitle>Menores gastos dos últimos 3 meses</S.ResumoTitle>\r\n            <S.ResumeWrapperCategory>\r\n                {categoriesHigherExpenses.map(category => {\r\n                  return (\r\n                    <S.GroupResumeCategory>\r\n                      <S.ResumeCategory>{category.categoryName}</S.ResumeCategory>\r\n                      <S.ResumeValue>{category.sumAllValues.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</S.ResumeValue>\r\n                    </S.GroupResumeCategory>\r\n                  )\r\n                })\r\n              }\r\n            </S.ResumeWrapperCategory>\r\n          </S.ResumoGroup>\r\n          <S.ResumoGroup>\r\n            <S.ResumoTitle>Categorias com valores estabilizados</S.ResumoTitle>\r\n          </S.ResumoGroup>\r\n        </S.ResumoWrapperGroup>\r\n      </S.ResumoWrapper>\r\n      <Line />\r\n      <Title title={\"Dados Selecionados\"} size={20}/>\r\n      <Table header={header} datas={data} action={false}  />\r\n    </S.IGPWrapper>\r\n    </S.IGPWrapper>\r\n    );\r\n  }\r\n\r\nexport default GraficosPage;","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\styled.js",["358","359"],"import styled from \"styled-components\"\r\n\r\nexport const IGPWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const FormDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin: 20px 0px;\r\n`\r\n\r\nexport const WrapperLegend = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nexport const LegendText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nexport const LegendWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px 0px 20px 0px;\r\n`\r\n\r\nexport const LegendItemGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 2px 0px 2px 0px;\r\n`\r\n\r\nexport const LegendCategory = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`\r\n\r\nexport const LegendColor = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n  width: 15px;\r\n  height: 15px;\r\n  background-color: ${props => \r\n    (props.colorIndex == 0 ? \"#10B2AE\" : \r\n    props.colorIndex == 1 ? \"#9E0616\" : \r\n    \"#120A8F\")};\r\n`\r\n\r\nexport const LegendRemoveCategory = styled.a`\r\n  margin-left: 15px;\r\n  cursor: pointer;\r\n  `\r\n\r\nexport const ResumoTitle = styled.div`\r\n`\r\nexport const ResumoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px 0px 20px 0px;\r\n`\r\n\r\nexport const ResumoWrapperGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const ResumoGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  margin: 10px 0px;\r\n`\r\n\r\nexport const ResumeWrapperCategory = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 2px 0px;\r\n`\r\n\r\nexport const GroupResumeCategory = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 4px 0px;\r\n`\r\n\r\nexport const ResumeCategory = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 200px;\r\n  margin-right: 20px;\r\n`\r\n\r\nexport const ResumeValue = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\button.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\Home\\index.js",["360","361","362","363","364","365","366","367","368","369","370"],"import React, { useState, useEffect } from 'react'\r\nimport Title from \"../../components/Title\"\r\nimport Table from \"../../components/Table\"\r\nimport ButtonForm from \"../../components/ButtonForm\"\r\nimport Feedback from \"../../components/Feedback\"\r\nimport AlertData from \"../../components/AlertData\"\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport  igc  from \"../../image/igc.svg\";\r\nimport  ica  from \"../../image/ica.svg\";\r\nimport  am  from \"../../image/am.svg\";\r\n//import * as S from \"./styled\"\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n\r\n  return(\r\n    <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n    <AlertData />\r\n    <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n    <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n      <a style={{margin: \"20px\"}} href={\"/Graficos\"}>\r\n        <img style={{width: 400, height: 200}} src={igc} />\r\n      </a>\r\n      <a style={{margin: \"20px\"}} href={\"/CadastroMeta\"}>\r\n        <img style={{width: 400, height: 200}} src={ica} />\r\n      </a>\r\n\r\n    </div>\r\n    <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n      <a style={{margin: \"20px\"}} href={\"/CadastroMeta\"}>\r\n        <img style={{width: 400, height: 200}} src={am} />\r\n      </a>\r\n\r\n    </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","E:\\Projetos\\fobos_web\\src\\helper\\excelDateFormatter.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CategorizarGastos\\statement.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\index.js",["371","372","373"],"import React, { useState, useEffect } from 'react'\r\nimport moment from \"moment\";\r\nimport Title from \"../../components/Title\"\r\nimport ButtonForm from \"../../components/ButtonForm\"\r\nimport Feedback from \"../../components/Feedback\"\r\nimport Deadline from \"../../components/Deadline\"\r\nimport Line from \"../../components/Line\"\r\nimport FormCadastroMetas from \"./FormCadastroMetas\"\r\n\r\nimport {Goal} from './goal'\r\n\r\nimport { Form, Col, Row } from 'react-bootstrap';\r\nimport * as S from \"./styled\"\r\nimport api from \"../../services/api\"\r\n\r\n\r\nconst CadastroMetaPage = () => {\r\n\r\n  const [user, setUser] = useState({\r\n    name: ''\r\n  });\r\n  \r\n  const [params, setParams] = useState({\r\n    name: '',\r\n    year: ''\r\n  });\r\n  const [goal, setGoal] = useState(Goal);\r\n  const [users, setUsers] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [goals, setGoals] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const [resposta, setResposta] = useState({\r\n    show: false,\r\n    feedback: '',\r\n    text: '',\r\n  })\r\n\r\n  useEffect (() => {\r\n    indexUser();\r\n    getYears();\r\n  }, [user])\r\n\r\n  const saveGoal = async (goal) => {\r\n    setLoading(true);\r\n    const response = await api.post(\"/api/goal/save\",  goal );\r\n    setResposta(response.data);\r\n    loadGoals();\r\n    setLoading(false);\r\n    emptyAfterSave();\r\n  }\r\n\r\n  const indexUser = async () => {\r\n    const response = await api.get(\"/api/user/users\");\r\n    setUsers(response.data);\r\n  }\r\n\r\n  const indexGoal = async () => {\r\n    const response = await api.get(\"/api/goal\");\r\n    setGoals(response.data);\r\n  }\r\n\r\n  const alterarStatus = async (id) => {\r\n    const responseAlter = await api.put(\"/api/goal/alterStatus/\"+ id);\r\n    const responseShow = await api.get(\"/api/goal/show/\" + params.name + \"&\" +  params.year);\r\n    setGoals(responseShow.data);\r\n    setResposta(responseAlter.data);\r\n  }\r\n    \r\n  const emptyAfterSave = async () => {\r\n    setUser({\r\n      name: ''\r\n    });\r\n  }\r\n\r\n  const editValues = async (id) => {\r\n    const response = await api.get(\"/api/goal/show/\" + id);\r\n    setGoal(response.data, {userName: response.data.user.name});\r\n    modalCadastroMetas();\r\n  }\r\n\r\n  const deleteValues = async (id) => {\r\n    const response = await api.put(\"/api/user/delete/\" + id);\r\n    setUser(response.data);\r\n    setResposta(response.data);\r\n  }\r\n\r\n  const modalCadastroMetas = () => {\r\n    setOpenModal(true);\r\n  }\r\n\r\n  const loadGoals = async () => {\r\n    const response = await api.get(\"/api/goal/show/\" + params.name + \"&\" +  params.year);\r\n    setGoals(response.data);\r\n  }\r\n\r\n  const getYears = async () => {\r\n    let yearInicial = 2019;\r\n    let yearActual = moment().year();\r\n    let yearsArray = [];\r\n\r\n    for(let a = yearActual; a >= yearInicial; a-- ){\r\n      yearsArray.push(a);\r\n    }\r\n\r\n    setYears(yearsArray);\r\n\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <FormCadastroMetas visible={openModal} setOpenModal={setOpenModal} goal={goal} users={users}/>\r\n    <S.CadastroBancoWrapper>\r\n      <Title title={\"Ações e Metas\"} size={42}/>\r\n      <Feedback resposta={resposta} setResposta={setResposta}/>\r\n      <S.FormDiv>\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"usuario\">\r\n              <Form.Label>Usuario</Form.Label>\r\n              <Form.Control type=\"text\" as=\"select\"\r\n              value={params.name}\r\n              onChange={event => {\r\n                setParams({...params, name: event.target.value})\r\n              }}>\r\n                <option>Seleciona uma opção</option>\r\n                {users.map((user => (\r\n                  <option>{user.name}</option>\r\n                  )))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} md=\"4\" controlId=\"usuario\">\r\n              <Form.Label>Ano</Form.Label>\r\n              <Form.Control type=\"text\" as=\"select\"\r\n              value={params.year}\r\n              onChange={event => {\r\n                setParams({...params, year: event.target.value})\r\n              }}>\r\n                <option>Seleciona uma opção</option>\r\n                {years.map((year => (\r\n                  <option>{year}</option>\r\n                  )))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n          </Form.Row>\r\n          <Row>\r\n          <Form.Row as={Col} md=\"2\">\r\n            <ButtonForm\r\n              loading={loading}\r\n              title={\"Pesquisar\"}\r\n              onClick={loadGoals}/>\r\n          </Form.Row>\r\n          <Form.Row as={Col} md=\"2\">\r\n            <ButtonForm\r\n              loading={loading}\r\n              title={\"Nova Meta\"}\r\n              onClick={modalCadastroMetas}/>\r\n          </Form.Row>\r\n          </Row>\r\n        </Form>\r\n      </S.FormDiv>\r\n      <Line />\r\n      <Deadline goals={goals} editValues={editValues} alterarStatus={alterarStatus}/>\r\n\r\n    </S.CadastroBancoWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CadastroMetaPage;","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Deadline\\index.js",["374","375","376","377","378","379"],"import React from \"react\";\r\nimport * as S from \"./styled\"\r\n\r\nimport Line from \"../Line\";\r\nimport Title from \"../Title\";\r\nimport check from \"../../image/check.svg\"\r\nimport edit from \"../../image/edit.svg\"\r\nimport moment from \"moment\";\r\n\r\nimport {data} from \"../../components/Deadline/data\"\r\n\r\nconst Deadline = (props) => {\r\n  return (\r\n    <S.DeadlineWrapper>\r\n      {props.goals.map((d, index) => {\r\n        return(\r\n          <S.DeadLineGroup>\r\n      <S.DeadlineHeaderWrapper>\r\n        <S.DeadlineHeaderDateWrapper>\r\n          {index % 2 == 0 ? (\r\n            <>\r\n              <S.DeadlineHeaderDate>\r\n                {\"DeadLine: \" + moment(d.deadline).format(\"DD/MM/YYYY\")}\r\n              </S.DeadlineHeaderDate>\r\n              <Line />\r\n            </>\r\n          ) : ''\r\n          }\r\n        </S.DeadlineHeaderDateWrapper>\r\n\r\n        <S.DeadlineHeaderMiddleWrapper status={d.status}/>\r\n\r\n        <S.DeadlineHeaderDateWrapper>\r\n        {index % 2 == 1 ? (\r\n            <>\r\n              <S.DeadlineHeaderDate>\r\n                 {\"DeadLine: \" + moment(d.deadline).format(\"DD/MM/YYYY\")}\r\n              </S.DeadlineHeaderDate>\r\n              <Line />\r\n            </>\r\n          ) : ''\r\n          }\r\n        </S.DeadlineHeaderDateWrapper>\r\n          </S.DeadlineHeaderWrapper>\r\n          <S.DeadLineBodyGroup>\r\n          {index % 2 == 1 ? (\r\n              <S.DeadLineBodyWrapper />\r\n          ) : ''\r\n          }\r\n            <S.DeadLineBodyWrapper dashedBorder={index % 2 == 1 ? 'right': 'left'}>\r\n              <S.DeadlineBodyTitleWrapper>\r\n                <Title title={d.title} size={22}/>\r\n              </S.DeadlineBodyTitleWrapper>\r\n              <S.DeadlineBodyDescriptionWrapper>\r\n                <S.DeadlineBodyDescription value={d.description}>\r\n                </S.DeadlineBodyDescription>\r\n              </S.DeadlineBodyDescriptionWrapper>\r\n              <S.DeadlineBodyIconsWrapper>\r\n              <S.DeadLineIcon onClick={() => props.alterarStatus(d.id)}>\r\n                <S.DeadLineIconCheck src={check}/>\r\n              </S.DeadLineIcon>\r\n              <S.DeadLineIcon onClick={() => props.editValues(d.id)}>\r\n                <S.DeadLineIconEdit src={edit}/>\r\n              </S.DeadLineIcon>\r\n              </S.DeadlineBodyIconsWrapper>\r\n          </S.DeadLineBodyWrapper>\r\n        {index % 2 == 0 ? (\r\n          <S.DeadLineBodyWrapper />\r\n          ) : ''\r\n        }\r\n        </S.DeadLineBodyGroup>\r\n      </S.DeadLineGroup>\r\n        );\r\n      })}      \r\n    </S.DeadlineWrapper>\r\n  );\r\n}\r\n\r\nexport default Deadline;","E:\\Projetos\\fobos_web\\src\\components\\Deadline\\styled.js",["380","381","382"],"import styled from \"styled-components\";\r\n\r\nexport const DeadlineWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-top: 40px;\r\n`\r\n\r\nexport const DeadlineHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const DeadlineHeaderDate = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\nexport const DeadlineHeaderDateWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n`\r\nexport const DeadlineHeaderMiddleWrapper = styled.div`\r\n  display: flex;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  background: ${props => (props.status == 'Andamento' ? \"#9E0616\" : \"#4CB5AB\")}; ;\r\n`\r\n\r\nexport const DeadLineBodyGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const DeadLineBodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  border-right-style: dashed;\r\n  border-right-color: #000;\r\n  border-right-width: ${props => (props.dashedBorder == 'left' ? \"3px\" : \"0px\")};\r\n  border-left-style: dashed;\r\n  border-left-color: #000;\r\n  border-left-width: ${props => (props.dashedBorder == 'right' ? \"3px\" : \"0px\")};\r\n\r\n  padding: 0px 20px 40px 20px;\r\n`\r\n\r\nexport const DeadlineBodyTitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\nexport const DeadlineBodyDescription = styled.textarea`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 300px;\r\n  margin: 20px 0px;\r\n  width: 100%;\r\n\r\n  color: BLACK;\r\n  border: solid 2 #E4E4E4;\r\n  background: #E4E4E4;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  &:focus {\r\n    outline: 0;\r\n    }\r\n`\r\n\r\nexport const DeadlineBodyDescriptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const DeadLineGroup = styled.div`\r\n`\r\nexport const DeadlineBodyIconsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\nexport const DeadLineIcon = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nexport const DeadLineIconCheck = styled.img`\r\n  cursor: pointer;\r\n  margin-top: 1px;\r\n  width: 35px;\r\n  height: 35px;\r\n`\r\nexport const DeadLineIconEdit = styled.img`\r\n  cursor: pointer;\r\n  width: 35px;\r\n  height: 35px;\r\n`","E:\\Projetos\\fobos_web\\src\\components\\Deadline\\data.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\FormCadastroMetas\\index.js",["383","384","385","386"],"import React, { useState, useEffect } from 'react'\r\nimport moment from \"moment\";\r\nimport Title from \"../../../components/Title\"\r\nimport ButtonForm from \"../../../components/ButtonForm\"\r\nimport Feedback from \"../../../components/Feedback\"\r\nimport Deadline from \"../../../components/Deadline\"\r\nimport Line from \"../../../components/Line\"\r\n\r\nimport {Goal} from './../goal'\r\n\r\nimport { Form, Col, Row } from 'react-bootstrap';\r\nimport * as S from \"./styled\";\r\nimport api from \"../../../services/api\";\r\n\r\nconst FormCadastroMetas = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [resposta, setResposta] = useState({\r\n    show: false,\r\n    feedback: '',\r\n    text: '',\r\n  })\r\n\r\n  const [goal, setGoal] = useState(Goal);\r\n\r\n  useEffect (() => {\r\n    //indexUsers();\r\n    setGoal(props.goal);\r\n    setUsers(props.users);\r\n    console.log(\"useEffect\");\r\n  }, [props.users, props.goal])\r\n\r\n  const indexUsers = async () => {\r\n    const response = await api.get(\"/api/user/users\");\r\n    setUsers(response.data);\r\n  }\r\n\r\n  const CloseModal = async () => {\r\n    console.log(\"Alô!\")\r\n    props.setOpenModal(false);\r\n  } \r\n\r\n  window.onclick = function(event) {\r\n    if(event.target.id == 'modal'){\r\n      props.setOpenModal(false);\r\n    }\r\n  }\r\n\r\n  const saveGoal = async () => {\r\n    setLoading(true);\r\n    const response = await api.post(\"/api/goal/save\",  goal );\r\n    setResposta(response.data);\r\n\r\n    setLoading(false);\r\n    emptyAfterSave();\r\n  }\r\n\r\n  const emptyAfterSave = async () => {\r\n    setGoal(Goal);\r\n  }\r\n\r\n  return(\r\n  <S.FormModal id=\"modal\" className=\"modal\" visible={props.visible}>\r\n\r\n  <S.FormModalWrapper class=\"modal-content\">\r\n    <S.FormModalClose onClick={CloseModal}>&times;</S.FormModalClose>\r\n    <S.ModalWrapper>\r\n      <Title title={\"Ações e Metas\"} size={42}/>\r\n      <Feedback resposta={resposta} setResposta={setResposta}/>\r\n      <Line />\r\n      <S.FormDiv >\r\n        <Form className=\"mb-2\">\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"title\">\r\n              <Form.Label>Título</Form.Label>\r\n              <Form.Control type=\"text\" value={goal.title}\r\n              onChange={event => {\r\n                setGoal({...goal, title: event.target.value})\r\n              }}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} md=\"4\" controlId=\"user\">\r\n              <Form.Label>Usuário</Form.Label>\r\n              <Form.Control type=\"text\" as=\"select\"\r\n                value={goal.userName}\r\n                onChange={event => {\r\n                  setGoal({...goal, userName: event.target.value , fkUser: parseInt(event.target.options[event.target.options.selectedIndex].getAttribute('data-key'))})\r\n                }}>\r\n                  <option>Selecione uma opção</option>\r\n                  {users.map((user) => (\r\n                    <option key={user.id} data-key={user.id}>{user.name}</option>\r\n                    ))\r\n                  }\r\n              </Form.Control> \r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"date\">\r\n              <Form.Label>Prazo</Form.Label>\r\n              <Form.Control type=\"date\"\r\n                value={moment(goal.deadline).format(\"YYYY-MM-DD\")}\r\n                onChange={event => {\r\n                  setGoal({...goal, deadline: event.target.value});\r\n                }}>\r\n                  \r\n              </Form.Control> \r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"8\" controlId=\"text\">\r\n              <Form.Label>Descrição</Form.Label>\r\n              <Form.Control type=\"text\" as=\"textarea\" rows={10}\r\n                value={goal.description}\r\n                onChange={event => {\r\n                  setGoal({...goal, description: event.target.value});\r\n                }}>\r\n                  \r\n              </Form.Control> \r\n            </Form.Group>\r\n          </Form.Row>\r\n          \r\n          <Form.Row as={Col} md=\"2\">\r\n            <ButtonForm\r\n              title={\"Salvar\"}\r\n              loading={loading}\r\n              onClick={saveGoal}\r\n              />\r\n          </Form.Row>\r\n        </Form>\r\n\r\n      </S.FormDiv>\r\n    </S.ModalWrapper>\r\n  </S.FormModalWrapper>\r\n\r\n</S.FormModal>\r\n);\r\n}\r\n\r\nexport default FormCadastroMetas;","E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\FormCadastroMetas\\styled.js",["387"],"import styled from \"styled-components\"\r\n\r\nexport const FormModal = styled.div`\r\n  display: ${props => (props.visible == true ? \"block\" : \"none\")}; /* Hidden by default */\r\n  position: fixed; /* Stay in place */\r\n  z-index: 1; /* Sit on top */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%; /* Full width */\r\n  height: 100%; /* Full height */\r\n  overflow: auto; /* Enable scroll if needed */\r\n  background-color: rgb(0,0,0); /* Fallback color */\r\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\r\n`\r\n\r\nexport const FormModalWrapper = styled.div`\r\n  background-color: #fefefe;\r\n  margin: 15% auto; /* 15% from the top and centered */\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 60%; /* Could be more or less, depending on screen size */\r\n`\r\n\r\nexport const FormModalClose = styled.span`\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n\r\n  &:hover,\r\n  &:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n`\r\n\r\nexport const FormDiv = styled.div`\r\n  margin: 20px 0px;\r\n` \r\n\r\nexport const ModalWrapper = styled.div`\r\n  margin: 20px;\r\n\r\n` ","E:\\Projetos\\fobos_web\\src\\pages\\Graficos\\header.js",[],"E:\\Projetos\\fobos_web\\src\\components\\AlertData\\index.js",["388","389","390"],"import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport * as S from \"./styled\"\r\nimport api from \"../../services/api\"\r\n\r\nconst AlertData = () => {\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    indexLastImport();\r\n  }, []);\r\n\r\n  const indexLastImport = async () => {\r\n    \r\n    const response = await api.get(\"/api/Statement/Show/LastImport\");\r\n    console.log(response.data);\r\n    formatterAlert(response.data);\r\n  }\r\n\r\n  const formatterAlert = async (lastStatements) => {\r\n    let cardNameAux = '';\r\n    let alertsObj = [];\r\n\r\n    lastStatements.map(statement => {\r\n      if(cardNameAux != statement.cardName){\r\n        cardNameAux = statement.cardName;\r\n        alertsObj.push(statement);\r\n      }\r\n    })\r\n    console.log(alertsObj);\r\n    setAlerts(alertsObj);\r\n  }\r\n\r\n  return (\r\n    <S.AlertDataWrapper visible={alerts == null ? false : true}>\r\n      <S.AlertDataIconWrapper>\r\n        <S.AlertDataIcon />\r\n      </S.AlertDataIconWrapper>\r\n      <S.AlertTextWrapper>\r\n      {alerts.map((alert) => (\r\n        <S.AlertText>\r\n          {`Último relatório importado do cartão de ${alert.cardName} foi no dia ${moment(alert.statementDate).format(\"DD/MM/YYYY\")}`}\r\n        </S.AlertText>\r\n      ))}\r\n      </S.AlertTextWrapper>\r\n    </S.AlertDataWrapper>\r\n  );\r\n}\r\n\r\nexport default AlertData;","E:\\Projetos\\fobos_web\\src\\components\\AlertData\\styled.js",[],"E:\\Projetos\\fobos_web\\src\\pages\\CadastroMeta\\goal.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\Pagination\\index.js",[],"E:\\Projetos\\fobos_web\\src\\components\\Table\\Pagination\\styled.js",[],{"ruleId":"391","severity":1,"message":"392","line":12,"column":10,"nodeType":"393","messageId":"394","endLine":12,"endColumn":19},{"ruleId":"391","severity":1,"message":"395","line":21,"column":10,"nodeType":"393","messageId":"394","endLine":21,"endColumn":14},{"ruleId":"391","severity":1,"message":"396","line":21,"column":16,"nodeType":"393","messageId":"394","endLine":21,"endColumn":23},{"ruleId":"391","severity":1,"message":"397","line":23,"column":16,"nodeType":"393","messageId":"394","endLine":23,"endColumn":23},{"ruleId":"391","severity":1,"message":"398","line":28,"column":19,"nodeType":"393","messageId":"394","endLine":28,"endColumn":29},{"ruleId":"391","severity":1,"message":"399","line":55,"column":7,"nodeType":"393","messageId":"394","endLine":55,"endColumn":19},{"ruleId":"391","severity":1,"message":"400","line":61,"column":7,"nodeType":"393","messageId":"394","endLine":61,"endColumn":15},{"ruleId":"401","severity":1,"message":"402","line":96,"column":25,"nodeType":"403","messageId":"404","endLine":96,"endColumn":27},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":6,"column":40,"nodeType":"411","messageId":"412","endLine":6,"endColumn":42},{"ruleId":"409","severity":1,"message":"410","line":8,"column":42,"nodeType":"411","messageId":"412","endLine":8,"endColumn":44},{"ruleId":"409","severity":1,"message":"410","line":9,"column":47,"nodeType":"411","messageId":"412","endLine":9,"endColumn":49},{"ruleId":"409","severity":1,"message":"410","line":10,"column":44,"nodeType":"411","messageId":"412","endLine":10,"endColumn":46},{"ruleId":"409","severity":1,"message":"410","line":18,"column":43,"nodeType":"411","messageId":"412","endLine":18,"endColumn":45},{"ruleId":"409","severity":1,"message":"410","line":20,"column":47,"nodeType":"411","messageId":"412","endLine":20,"endColumn":49},{"ruleId":"409","severity":1,"message":"410","line":26,"column":41,"nodeType":"411","messageId":"412","endLine":26,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":4,"column":41,"nodeType":"411","messageId":"412","endLine":4,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":7,"column":44,"nodeType":"411","messageId":"412","endLine":7,"endColumn":46},{"ruleId":"391","severity":1,"message":"413","line":6,"column":21,"nodeType":"393","messageId":"394","endLine":6,"endColumn":28},{"ruleId":"391","severity":1,"message":"414","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":9},{"ruleId":"391","severity":1,"message":"415","line":11,"column":10,"nodeType":"393","messageId":"394","endLine":11,"endColumn":19},{"ruleId":"391","severity":1,"message":"416","line":12,"column":24,"nodeType":"393","messageId":"394","endLine":12,"endColumn":39},{"ruleId":"417","severity":1,"message":"418","line":15,"column":3,"nodeType":"393","endLine":15,"endColumn":12,"suggestions":"419"},{"ruleId":"409","severity":1,"message":"410","line":29,"column":26,"nodeType":"411","messageId":"412","endLine":29,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":11,"column":102,"nodeType":"411","messageId":"412","endLine":11,"endColumn":104},{"ruleId":"409","severity":1,"message":"410","line":12,"column":19,"nodeType":"411","messageId":"412","endLine":12,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":16,"column":26,"nodeType":"411","messageId":"412","endLine":16,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":20,"column":26,"nodeType":"411","messageId":"412","endLine":20,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":9,"column":28,"nodeType":"411","messageId":"412","endLine":9,"endColumn":30},{"ruleId":"417","severity":1,"message":"420","line":19,"column":6,"nodeType":"421","endLine":19,"endColumn":27,"suggestions":"422"},{"ruleId":"409","severity":1,"message":"410","line":25,"column":40,"nodeType":"411","messageId":"412","endLine":25,"endColumn":42},{"ruleId":"391","severity":1,"message":"423","line":1,"column":38,"nodeType":"393","messageId":"394","endLine":1,"endColumn":44},{"ruleId":"391","severity":1,"message":"413","line":7,"column":21,"nodeType":"393","messageId":"394","endLine":7,"endColumn":28},{"ruleId":"391","severity":1,"message":"424","line":14,"column":8,"nodeType":"393","messageId":"394","endLine":14,"endColumn":22},{"ruleId":"391","severity":1,"message":"425","line":43,"column":30,"nodeType":"393","messageId":"394","endLine":43,"endColumn":51},{"ruleId":"391","severity":1,"message":"426","line":57,"column":10,"nodeType":"393","messageId":"394","endLine":57,"endColumn":17},{"ruleId":"391","severity":1,"message":"398","line":57,"column":19,"nodeType":"393","messageId":"394","endLine":57,"endColumn":29},{"ruleId":"417","severity":1,"message":"427","line":66,"column":6,"nodeType":"421","endLine":66,"endColumn":11,"suggestions":"428"},{"ruleId":"417","severity":1,"message":"429","line":72,"column":6,"nodeType":"421","endLine":72,"endColumn":19,"suggestions":"430"},{"ruleId":"401","severity":1,"message":"402","line":82,"column":34,"nodeType":"403","messageId":"404","endLine":82,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":93,"column":53,"nodeType":"403","messageId":"404","endLine":93,"endColumn":55},{"ruleId":"409","severity":1,"message":"410","line":138,"column":32,"nodeType":"411","messageId":"412","endLine":138,"endColumn":34},{"ruleId":"409","severity":1,"message":"410","line":141,"column":34,"nodeType":"411","messageId":"412","endLine":141,"endColumn":36},{"ruleId":"401","severity":1,"message":"402","line":156,"column":29,"nodeType":"403","messageId":"404","endLine":156,"endColumn":31},{"ruleId":"409","severity":1,"message":"410","line":159,"column":26,"nodeType":"411","messageId":"412","endLine":159,"endColumn":28},{"ruleId":"409","severity":1,"message":"410","line":164,"column":15,"nodeType":"411","messageId":"412","endLine":164,"endColumn":17},{"ruleId":"401","severity":1,"message":"402","line":173,"column":31,"nodeType":"403","messageId":"404","endLine":173,"endColumn":33},{"ruleId":"409","severity":1,"message":"410","line":176,"column":23,"nodeType":"411","messageId":"412","endLine":176,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":310,"column":23,"nodeType":"411","messageId":"412","endLine":310,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":311,"column":23,"nodeType":"411","messageId":"412","endLine":311,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":52,"column":23,"nodeType":"411","messageId":"412","endLine":52,"endColumn":25},{"ruleId":"409","severity":1,"message":"410","line":53,"column":22,"nodeType":"411","messageId":"412","endLine":53,"endColumn":24},{"ruleId":"391","severity":1,"message":"431","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"432","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"433","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":13},{"ruleId":"391","severity":1,"message":"434","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":13},{"ruleId":"391","severity":1,"message":"435","line":4,"column":8,"nodeType":"393","messageId":"394","endLine":4,"endColumn":18},{"ruleId":"391","severity":1,"message":"436","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":16},{"ruleId":"391","severity":1,"message":"437","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":14},{"ruleId":"391","severity":1,"message":"438","line":7,"column":16,"nodeType":"393","messageId":"394","endLine":7,"endColumn":19},{"ruleId":"439","severity":1,"message":"440","line":23,"column":9,"nodeType":"441","endLine":23,"endColumn":60},{"ruleId":"439","severity":1,"message":"440","line":26,"column":9,"nodeType":"441","endLine":26,"endColumn":60},{"ruleId":"439","severity":1,"message":"440","line":32,"column":9,"nodeType":"441","endLine":32,"endColumn":59},{"ruleId":"391","severity":1,"message":"442","line":45,"column":9,"nodeType":"393","messageId":"394","endLine":45,"endColumn":17},{"ruleId":"391","severity":1,"message":"443","line":59,"column":9,"nodeType":"393","messageId":"394","endLine":59,"endColumn":18},{"ruleId":"391","severity":1,"message":"399","line":83,"column":9,"nodeType":"393","messageId":"394","endLine":83,"endColumn":21},{"ruleId":"391","severity":1,"message":"444","line":10,"column":9,"nodeType":"393","messageId":"394","endLine":10,"endColumn":13},{"ruleId":"409","severity":1,"message":"410","line":20,"column":22,"nodeType":"411","messageId":"412","endLine":20,"endColumn":24},{"ruleId":"409","severity":1,"message":"410","line":34,"column":20,"nodeType":"411","messageId":"412","endLine":34,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":46,"column":22,"nodeType":"411","messageId":"412","endLine":46,"endColumn":24},{"ruleId":"409","severity":1,"message":"410","line":50,"column":60,"nodeType":"411","messageId":"412","endLine":50,"endColumn":62},{"ruleId":"409","severity":1,"message":"410","line":67,"column":20,"nodeType":"411","messageId":"412","endLine":67,"endColumn":22},{"ruleId":"409","severity":1,"message":"410","line":29,"column":40,"nodeType":"411","messageId":"412","endLine":29,"endColumn":42},{"ruleId":"409","severity":1,"message":"410","line":43,"column":54,"nodeType":"411","messageId":"412","endLine":43,"endColumn":56},{"ruleId":"409","severity":1,"message":"410","line":46,"column":53,"nodeType":"411","messageId":"412","endLine":46,"endColumn":55},{"ruleId":"391","severity":1,"message":"445","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":16},{"ruleId":"391","severity":1,"message":"446","line":11,"column":21,"nodeType":"393","messageId":"394","endLine":11,"endColumn":24},{"ruleId":"391","severity":1,"message":"447","line":33,"column":9,"nodeType":"393","messageId":"394","endLine":33,"endColumn":19},{"ruleId":"409","severity":1,"message":"410","line":44,"column":24,"nodeType":"411","messageId":"412","endLine":44,"endColumn":26},{"ruleId":"409","severity":1,"message":"410","line":4,"column":38,"nodeType":"411","messageId":"412","endLine":4,"endColumn":40},{"ruleId":"417","severity":1,"message":"448","line":12,"column":6,"nodeType":"421","endLine":12,"endColumn":8,"suggestions":"449"},{"ruleId":"401","severity":1,"message":"402","line":25,"column":34,"nodeType":"403","messageId":"404","endLine":25,"endColumn":36},{"ruleId":"409","severity":1,"message":"450","line":26,"column":22,"nodeType":"411","messageId":"412","endLine":26,"endColumn":24},"no-unused-vars","'make_cols' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setCard' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'deleteValues' is assigned a value but never used.","'loadCard' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["451"],"no-negated-in-lhs",["452"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Spinner' is defined but never used.","'_' is defined but never used.","'pageNumer' is assigned a value but never used.","'setPageSelected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDataSet'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.datas] as a second argument to the useEffect Hook.",["453"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["454"],"'useRef' is defined but never used.","'ShowcaseButton' is defined but never used.","'setCategoriesSelected' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'transformDataIGC'. Either include it or remove the dependency array.",["455"],"React Hook useEffect has a missing dependency: 'loadStatements'. Either include it or remove the dependency array.",["456"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Title' is defined but never used.","'Table' is defined but never used.","'ButtonForm' is defined but never used.","'Feedback' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'saveGoal' is assigned a value but never used.","'indexGoal' is assigned a value but never used.","'data' is defined but never used.","'Deadline' is defined but never used.","'Row' is defined but never used.","'indexUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'indexLastImport'. Either include it or remove the dependency array.",["457"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Add dependencies array: [props.datas]",{"range":"468","text":"469"},"Update the dependencies array to be: [props, props.resposta.show]",{"range":"470","text":"471"},"Update the dependencies array to be: [IGC, transformDataIGC]",{"range":"472","text":"473"},"Update the dependencies array to be: [clickedNode, loadStatements]",{"range":"474","text":"475"},"Update the dependencies array to be: [indexLastImport]",{"range":"476","text":"477"},[471,471],", [props.datas]",[454,475],"[props, props.resposta.show]",[1939,1944],"[IGC, transformDataIGC]",[2043,2056],"[clickedNode, loadStatements]",[280,282],"[indexLastImport]"]